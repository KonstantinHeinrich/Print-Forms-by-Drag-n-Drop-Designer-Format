
#Область ВспомогательныеМетоды

#Область МетодыНаКлиенте

&НаКлиенте
Процедура ПечатьOffice(ФайлМакета) 
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		ПоказатьПредупреждение(,"Выберите документ для печати");
		Возврат;
	КонецЕсли;
	
	ТипМакета = ?(Прав(ФайлМакета,3) = "odt", "odt", "doc");
	ДвоичныеДанныеМакета = Новый ДвоичныеДанные(ФайлМакета);
	Секция = Новый Структура("ИмяОбласти,ТипОбласти", "Заголовок", "Общая");
	
	ПечатнаяФорма = УправлениеПечатьюКлиент.ИнициализироватьПечатнуюФорму(ТипМакета);
	Макет = ИнициализироватьМакет(ДвоичныеДанныеМакета, ТипМакета);
	
	ДанныеОбъекта = Новый Соответствие;
	МассивКИ = Новый Массив;
	МассивДопСвойств = Новый Массив;
	Секции = Новый Массив;
	ТабЧасти = Новый Массив;
	ТекТабЧасть = Неопределено;	
	       	
	Если ТипМакета = "odt" Тогда
		
		Document = Макет.Document;
		SearchDescriptor = Document.CreateSearchDescriptor();
		SearchDescriptor.SearchString = "\{v8 .*\}";
		SearchDescriptor.SearchCaseSensitive = False;
		SearchDescriptor.SearchWords = False;
		SearchDescriptor.SearchRegularExpression = True;
		Found = Document.FindFirst(SearchDescriptor);
		
		While Found <> Undefined Do
			СпецСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Found.GetString(), "{v8 ");
			Для каждого СпецСтрока Из СпецСтроки Цикл 				
				Конец = Найти(СпецСтрока,"}");
				Если Конец = 0 Тогда 
					Продолжить;
				КонецЕсли;
				СпецСтрока = Лев(СпецСтрока, Конец-1);			              			
				РазобратьСтрокуЗамены(СпецСтрока, ДанныеОбъекта, МассивКИ, МассивДопСвойств, Секции, ТабЧасти, ТекТабЧасть);				
			КонецЦикла;			
			Found = Document.FindNext(Found.End, SearchDescriptor); 			
		EndDo;
		
	Иначе
				
		Content = Макет.COMСоединение.ActiveDocument.Content;
		Content.Select();
		Selection = Content.Application.Selection;	
		FindObject = Selection.Find;
		FindObject.ClearFormatting();
		FindObject.MatchWildcards = True;
		
		While FindObject.Execute("\{v8 *\}") Do
			СпецСтрока = Сред(Selection.Text, 5);
			СпецСтрока = Лев(СпецСтрока,СтрДлина(СпецСтрока)-1);
			РазобратьСтрокуЗамены(СпецСтрока, ДанныеОбъекта, МассивКИ, МассивДопСвойств, Секции, ТабЧасти, ТекТабЧасть);			
		EndDo;
		
		FindObject.MatchWildcards = False;
		
	КонецЕсли;
	
	Если Секции.Количество() = 0 Тогда
		ПоказатьПредупреждение(,"В выбранном файле нет ни одной области");
		Возврат;
	КонецЕсли;	
	
	Если ДанныеОбъекта.Количество() = 0 Тогда
		ПоказатьПредупреждение(,"В выбранном файле нет ни одного поля");
		Возврат;
	КонецЕсли;
	
	ЗаполнитьДанныеОбъекта(Документ, ДанныеОбъекта, ТабЧасти, МассивКИ, МассивДопСвойств);
	
	Для каждого Секция Из Секции Цикл
		Область = ОбластьМакета(Макет, Секция);
		Если Секция.ТипОбласти = "Общая" Тогда
			УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта, Ложь);
		Иначе
			ТабЧасть = ДанныеОбъекта[СтрЗаменить(Секция.ИмяОбласти,"СтрокаТаблица","")];
			ПрисоединитьИЗаполнитьКоллекцию(ПечатнаяФорма, Область, ТабЧасть, Ложь);
		КонецЕсли;
	КонецЦикла;
	
	УправлениеПечатьюКлиент.ПоказатьДокумент(ПечатнаяФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрисоединитьИЗаполнитьКоллекцию(Знач ПечатнаяФорма,
										Знач ОбластьМакета,
										Знач Данные,
										Знач ПереходНаСледСтроку = Истина)
	Если ОбластьМакета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОбласти = ОбластьМакета.ОписаниеОбласти;
	
	Если ПечатнаяФорма.Тип = "DOC" Тогда
		Если		ОписаниеОбласти.ТипОбласти = "СтрокаТаблицы" Тогда
			ПрисоединитьИЗаполнитьОбластьТаблицыMSWord(ПечатнаяФорма, ОбластьМакета, Данные, ПереходНаСледСтроку);
		ИначеЕсли	ОписаниеОбласти.ТипОбласти = "Список" Тогда
			УправлениеПечатьюMSWordКлиент.ПрисоединитьИЗаполнитьНабор(ПечатнаяФорма, ОбластьМакета, Данные, ПереходНаСледСтроку);
		Иначе
			ВызватьИсключение(НСтр("ru = 'Тип области не указан или указан не корректно'"));
		КонецЕсли;
	ИначеЕсли ПечатнаяФорма.Тип = "ODT" Тогда
		Если		ОписаниеОбласти.ТипОбласти = "СтрокаТаблицы" Тогда
			УправлениеПечатьюOOWriterКлиент.ПрисоединитьИЗаполнитьКоллекцию(ПечатнаяФорма, ОбластьМакета, Данные, Истина, ПереходНаСледСтроку);
		ИначеЕсли	ОписаниеОбласти.ТипОбласти = "Список" Тогда
			УправлениеПечатьюOOWriterКлиент.ПрисоединитьИЗаполнитьКоллекцию(ПечатнаяФорма, ОбластьМакета, Данные, Ложь, ПереходНаСледСтроку);
		Иначе
			ВызватьИсключение(НСтр("ru = 'Тип области не указан или указан не корректно'"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрисоединитьИЗаполнитьОбластьТаблицыMSWord(Знач ПечатнаяФорма,
												Знач ОбластьHandler,
												Знач ДанныеОбъекта = Неопределено,
												Знач ПереходНаСледСтроку = Истина)
	
	Если ДанныеОбъекта = Неопределено Или ДанныеОбъекта.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПерваяСтрока = Истина;
	
	ОбластьHandler.Document.Range(ОбластьHandler.Start, ОбластьHandler.End).Copy();
	
	ActiveDocument = ПечатнаяФорма.COMСоединение.ActiveDocument;
	
	// Вставляем первый строку, по которому далее будет выполняться
	// вставка новых строк с форматированием по первой.
	УправлениеПечатьюMSWordКлиент.ВставитьРазрывНаНовуюСтроку(ПечатнаяФорма); 
	ПозицияВставки = ActiveDocument.Range().End;
	ОбластьВставки = ActiveDocument.Range(ПозицияВставки-1, ПозицияВставки-1);
	ОбластьВставки.Paste();
	ActiveDocument.Range(ПозицияВставки-2, ПозицияВставки-2).Delete();
	
	Если ТипЗнч(ДанныеОбъекта[0]) = Тип("Структура") Или ТипЗнч(ДанныеОбъекта[0]) = Тип("Соответствие") Тогда
		Для Каждого ПараметрЗначение Из ДанныеОбъекта[0] Цикл
			ЗаменитьMSWord(ActiveDocument.Content, ПараметрЗначение.Ключ, ПараметрЗначение.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого ДанныеСтрокиТаблицы Из ДанныеОбъекта Цикл
		Если ПерваяСтрока Тогда
			ПерваяСтрока = Ложь;
			Продолжить;
		КонецЕсли;
		
		НоваяПозицияВставки = ActiveDocument.Range().End;
		ActiveDocument.Range(ПозицияВставки-1, ActiveDocument.Range().End-1).Select();
		ПечатнаяФорма.COMСоединение.Selection.InsertRowsBelow();
		
		ActiveDocument.Range(НоваяПозицияВставки-1, ActiveDocument.Range().End-2).Select();
		ПечатнаяФорма.COMСоединение.Selection.Paste();
		ПозицияВставки = НоваяПозицияВставки;
		
		Если ТипЗнч(ДанныеСтрокиТаблицы) = Тип("Структура") Или ТипЗнч(ДанныеСтрокиТаблицы) = Тип("Соответствие") Тогда
			Для Каждого ПараметрЗначение Из ДанныеСтрокиТаблицы Цикл
				ЗаменитьMSWord(ActiveDocument.Content, ПараметрЗначение.Ключ, ПараметрЗначение.Значение);
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПереходНаСледСтроку Тогда
		УправлениеПечатьюMSWordКлиент.ВставитьРазрывНаНовуюСтроку(ПечатнаяФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаменитьMSWord(Object, Знач СтрокаПоиска, Знач СтрокаЗамены)
	
	СтрокаПоиска = "{v8 " + СтрокаПоиска + "}";
	СтрокаЗамены = Строка(СтрокаЗамены);
	
	Object.Select();
	Selection = Object.Application.Selection;
	
	FindObject = Selection.Find;
	FindObject.ClearFormatting();
	Пока FindObject.Execute(СтрокаПоиска) Цикл
		Если ПустаяСтрока(СтрокаЗамены) Тогда
			Selection.Delete();
		ИначеЕсли ЭтоАдресВременногоХранилища(СтрокаЗамены) Тогда
			Selection.Delete();
			#Если ВебКлиент Тогда
				ИмяВременногоФайла = КаталогВременныхФайлов() + Строка(Новый УникальныйИдентификатор) + ".tmp";
			#Иначе
				ИмяВременногоФайла = ПолучитьИмяВременногоФайла("tmp");
			#КонецЕсли
			
			ОписанияФайлов = Новый Массив;
			ОписанияФайлов.Добавить(Новый ОписаниеПередаваемогоФайла(ИмяВременногоФайла, СтрокаЗамены));
			Если ПолучитьФайлы(ОписанияФайлов, , КаталогВременныхФайлов(), Ложь) Тогда
				Selection.Range.InlineShapes.AddPicture(ИмяВременногоФайла);
			Иначе
				Selection.TypeText("");
			КонецЕсли;
		Иначе
			Selection.TypeText(СтрокаЗамены);
		КонецЕсли;
	КонецЦикла;
	
	Selection.Collapse();
	
КонецПроцедуры
	
&НаКлиенте
Функция ИнициализироватьМакет(ДвоичныеДанныеМакета, ТипМакета)
	
	Попытка
		Возврат УправлениеПечатьюКлиент.ИнициализироватьМакетОфисногоДокумента(ДвоичныеДанныеМакета, ТипМакета);
	Исключение
		Возврат УправлениеПечатьюКлиент.ИнициализироватьМакет(ДвоичныеДанныеМакета, ТипМакета);
	КонецПопытки;
	
КонецФункции

&НаКлиенте
Функция ОбластьМакета(Макет, Секция)
	
	Попытка
		Возврат УправлениеПечатьюКлиент.ОбластьМакета(Макет, Секция);
	Исключение
		Возврат УправлениеПечатьюКлиент.ПолучитьОбласть(Макет, Секция);
	КонецПопытки;
	
КонецФункции

&НаКлиенте
Процедура РазобратьСтрокуЗамены(Знач СпецСтрока, ДанныеОбъекта, МассивКИ, МассивДопСвойств, Секции, ТабЧасти, ТекТабЧасть)
	
	Если Найти(СпецСтрока,"Область.") = 0 Тогда
						
		Если ТекТабЧасть = Неопределено Тогда
			
			Если ДанныеОбъекта[СпецСтрока] = Неопределено Тогда
				Если Найти(СпецСтрока,"_КонтактнаяИнформация_") Тогда  					
					Если МассивКИ.Найти(СпецСтрока) = Неопределено Тогда						
						МассивКИ.Добавить(СпецСтрока);
						МасСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СпецСтрока,"_КонтактнаяИнформация_");
						Рекв = МасСтрок[0];
						Если ДанныеОбъекта[Рекв] = Неопределено Тогда
							ДанныеОбъекта.Вставить(Рекв, СтрЗаменить(Рекв,"_","."));
						КонецЕсли;
					КонецЕсли;
				ИначеЕсли Найти(СпецСтрока,"_ДополнительныеСвойства_") Тогда  					
					Если МассивДопСвойств.Найти(СпецСтрока) = Неопределено Тогда						
						МассивДопСвойств.Добавить(СпецСтрока);
						МасСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СпецСтрока,"_ДополнительныеСвойства_");
						Рекв = МасСтрок[0];
						Если ДанныеОбъекта[Рекв] = Неопределено Тогда
							ДанныеОбъекта.Вставить(Рекв, СтрЗаменить(Рекв,"_","."));
						КонецЕсли;
					КонецЕсли;
				Иначе
					ДанныеОбъекта.Вставить(СпецСтрока, СтрЗаменить(СпецСтрока,"_","."));
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			
			Если ТекТабЧасть.Поля[СпецСтрока] = Неопределено Тогда
				ТекТабЧасть.Поля.Вставить(СпецСтрока, СтрЗаменить(СпецСтрока,"_","."));				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		НоваяОбласть = Новый Структура;	
		НоваяОбласть.Вставить("ИмяОбласти", СтрЗаменить(СпецСтрока,"Область.",""));
		НоваяОбласть.Вставить("ТипОбласти", ?(Найти(СпецСтрока,"СтрокаТаблица") = 0, "Общая", "СтрокаТаблицы"));	
		Секции.Добавить(НоваяОбласть);
		
		Если НоваяОбласть.ТипОбласти = "СтрокаТаблицы" Тогда
			ТекТабЧасть = Новый Структура("Имя,Поля", СтрЗаменить(НоваяОбласть.ИмяОбласти,"СтрокаТаблица",""), Новый Соответствие);
			ТабЧасти.Добавить(ТекТабЧасть);
		Иначе
			ТекТабЧасть = Неопределено;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокМакетов()
	
	СписокМакетов.Очистить();
	Если ЗначениеЗаполнено(ПапкаМакетов) Тогда
		Файлы = НайтиФайлы(ПапкаМакетов,"*.*");
		Для каждого Файл Из Файлы Цикл
			Если Найти(Файл.Имя,"~") = 0 И (Файл.Расширение = ".odt" Или Файл.Расширение = ".doc" Или Файл.Расширение = ".docx") Тогда
				Картинка = ?(Файл.Расширение = ".odt", ЗначокWriter, ЗначокWord);
				СписокМакетов.Добавить(Файл.ПолноеИмя, Файл.ИмяБезРасширения, , Картинка);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМакетНачало(ТипМакета)
	ИмяФайла = "";
	ПоказатьВводСтроки(Новый ОписаниеОповещения("СоздатьМакет", ЭтаФорма, ТипМакета), "", "Введите название макета");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМакет(ИмяФайла, ТипМакета) Экспорт
		
	Если Не ЗначениеЗаполнено(ИмяФайла) Тогда
		Возврат;
	КонецЕсли;
	
	Расширение = ?(ТипМакета = "ДокументWord", ".doc", ".odt");
	ПолноеИмяФайла = ПапкаМакетов + "\" + ИмяФайла + Расширение;
	Файл = Новый Файл(ПолноеИмяФайла);
	ДополнительныеПараметры = Новый Структура("ПолноеИмяФайла, ТипМакета", ПолноеИмяФайла, ТипМакета);
	Если Файл.Существует() Тогда
		ПоказатьВопрос(
			Новый ОписаниеОповещения("СоздатьМакетЗавершение", ЭтаФорма, ДополнительныеПараметры),
			"Макет с таким именем уже существует. Перезаписать?",
			РежимДиалогаВопрос.ДаНет);
	Иначе
		СоздатьМакетЗавершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);	
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМакетЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ПолноеИмяФайла = ДополнительныеПараметры.ПолноеИмяФайла;
	ТипМакета = ДополнительныеПараметры.ТипМакета;
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ДвоичныеДанные = ЭтаФорма[ТипМакета];
	ДвоичныеДанные.Записать(ПолноеИмяФайла);
	ЗапуститьПриложение(ПолноеИмяФайла);
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСозданиеНового;

КонецПроцедуры

#КонецОбласти

#Область МетодыНаСервере

&НаСервереБезКонтекста
Процедура ЗаполнитьДанныеОбъекта(Ссылка, ДанныеОбъекта, ТабличныеЧасти, МассивКИ, МассивДопСвойств)
	
	РеквизитыОбъекта = СформироватьСтруктуруПолей(ДанныеОбъекта);   	
	РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, РеквизитыОбъекта);	
	ЗаполнитьСтруктуруСФорматами(ДанныеОбъекта, РеквизитыОбъекта);                         
	
	Для каждого СтрКИ Из МассивКИ Цикл
		МасСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрКИ,"_КонтактнаяИнформация_");
		ВладелецКИ = ДанныеОбъекта[МасСтрок[0]];
		Попытка
			ВидКИ = Справочники.ВидыКонтактнойИнформации[МасСтрок[1]];
		Исключение
			ВидКИ = Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию(МасСтрок[1]);
		КонецПопытки;
		ЗначениеКИ = КонтактнаяИнформацияОбъекта(ВладелецКИ,ВидКИ);
		ДанныеОбъекта.Вставить(СтрКИ, ЗначениеКИ);
	КонецЦикла;
	
	Для каждого СтрДС Из МассивДопСвойств Цикл
		МасСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрДС,"_ДополнительныеСвойства_");
		ВладелецДС = ДанныеОбъекта[МасСтрок[0]];
		ДопСвойства = Новый Массив;
		ДопСвойства.Добавить(ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(МасСтрок[1]));
		ТЗ = УправлениеСвойствами.ПолучитьЗначенияСвойств(ВладелецДС,,,ДопСвойства);
		ЗначениеДС = ?(ТЗ.Количество() = 0, "", ТЗ[0].Значение);
		ДанныеОбъекта.Вставить(СтрДС, ЗначениеДС);
	КонецЦикла;
	
	ИмяТаблицы = ОбщегоНазначения.ИмяТаблицыПоСсылке(Ссылка);
	Для каждого ТЧ Из ТабличныеЧасти Цикл
		СтруктураСтроки = СформироватьСтруктуруПолей(ТЧ.Поля);		
		ТекстЗапроса = "ВЫБРАТЬ";
		Для каждого Поле Из СтруктураСтроки Цикл
			ТекстЗапроса = ТекстЗапроса + Символы.ПС + СтрЗаменить(Поле.Ключ,"_",".") + " КАК " + Поле.Ключ + ",";
		КонецЦикла;
		ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса)-1);
		Запрос = Новый Запрос(ТекстЗапроса + Символы.ПС + "ИЗ " + ИмяТаблицы + "." + ТЧ.Имя + " ГДЕ Ссылка = &Ссылка");
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		КоллекцияПолей = Новый Массив;
		ПоляСтроки = Новый ФиксированноеСоответствие(ТЧ.Поля);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ДанныеСтроки = Новый Соответствие(ПоляСтроки);
			ЗаполнитьСтруктуруСФорматами(ДанныеСтроки, Выборка);
			КоллекцияПолей.Добавить(ДанныеСтроки);
		КонецЦикла;		
		ДанныеОбъекта.Вставить(ТЧ.Имя, КоллекцияПолей);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьСтруктуруПолей(Знач ДанныеОбъекта)
	
	РеквизитыОбъекта = Новый Структура;
	Для каждого Поле Из ДанныеОбъекта Цикл
		Если Найти(Поле.Ключ, "Format=<") = 0 Тогда
			РеквизитыОбъекта.Вставить(Поле.Ключ, Поле.Значение);
		Иначе
			Позиц = Найти(Поле.Ключ, ">");
			СпецСтрока = Сред(Поле.Ключ, Позиц+2);
			Если Не РеквизитыОбъекта.Свойство(СпецСтрока) Тогда
				РеквизитыОбъекта.Вставить(СпецСтрока, Сред(Поле.Значение, Позиц+2));
			КонецЕсли;
		КонецЕсли; 			
	КонецЦикла;

	Возврат РеквизитыОбъекта;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаполнитьСтруктуруСФорматами(ДанныеОбъекта, Знач РеквизитыОбъекта)
	
	Для каждого Поле Из ДанныеОбъекта Цикл
		Если Найти(Поле.Ключ, "Format=<") = 0 Тогда
			ДанныеОбъекта[Поле.Ключ] = РеквизитыОбъекта[Поле.Ключ];
		Иначе
			МасСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Поле.Ключ,"> ");
			ФорматнаяСтрока = СтрЗаменить(МасСтрок[0], "Format=<", "");
			ДанныеОбъекта[Поле.Ключ] = ПреобразоватьПоФормату(РеквизитыОбъекта[МасСтрок[1]], ФорматнаяСтрока);	
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокВидовКонтактнойИнформации(СправочникМД)
	
	Результат = Новый СписокЗначений;
	
	Если СправочникМД.ТабличныеЧасти.Найти("КонтактнаяИнформация") = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВидыКонтактнойИнформации.Предопределенный
	|			ТОГДА ВидыКонтактнойИнформации.ИмяПредопределенныхДанных
	|		ИНАЧЕ ВидыКонтактнойИнформации.Наименование
	|	КОНЕЦ КАК Имя,
	|	ВидыКонтактнойИнформации.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	|ГДЕ
	|	ВидыКонтактнойИнформации.Родитель.ИмяПредопределенныхДанных = &Родитель
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование");
	Запрос.УстановитьПараметр("Родитель", "Справочник" + СправочникМД.Имя);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат.Добавить(Выборка.Имя, Выборка.Наименование);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция КонтактнаяИнформацияОбъекта(Ссылка, ВидКонтактнойИнформации)	
	
	Попытка
		Возврат УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Ссылка, ВидКонтактнойИнформации);
	Исключение
		Возврат УправлениеКонтактнойИнформацией.ПолучитьКонтактнуюИнформацияОбъекта(Ссылка, ВидКонтактнойИнформации)
	КонецПопытки; 	
	
КонецФункции

&НаСервереБезКонтекста
Функция ПреобразоватьПоФормату(ИсходноеЗначение, ФорматнаяСтрока)
	Попытка
		Если ФорматнаяСтрока = "КоличествоПрописью" Тогда
			Возврат ЧислоПрописью(ИсходноеЗначение);
		ИначеЕсли ФорматнаяСтрока = "СуммаПрописью" Тогда
			Возврат ЧислоПрописью(ИсходноеЗначение, , "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
		ИначеЕсли Лев(ФорматнаяСтрока,5) = "Падеж" Тогда
			НомерПадежа = Число(Прав(ФорматнаяСтрока,1));
			Результат = ИсходноеЗначение;
			ОбщегоНазначения.Просклонять(ИсходноеЗначение, НомерПадежа, Результат);
			Возврат Результат;
		Иначе
			Возврат Формат(ИсходноеЗначение, ФорматнаяСтрока);
		КонецЕсли;
	Исключение
	КонецПопытки;	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьШаблонПриНеобходимости(Данные, ИмяФайла, Расширение)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Справочник.Файлы КАК Файлы
	|ГДЕ
	|	Файлы.Наименование = &Наименование
	|	И Файлы.ВладелецФайла = ЗНАЧЕНИЕ(Справочник.ПапкиФайлов.Шаблоны)");
	Запрос.УстановитьПараметр("Наименование", ИмяФайла);
	
	Если Запрос.Выполнить().Пустой() Тогда
		ИмяВремФайла = КаталогВременныхФайлов() + ИмяФайла + "." + Расширение;
		Данные.Записать(ИмяВремФайла);
		СоздатьФайлНаОсновеФайлаНаДиске(Справочники.ПапкиФайлов.Шаблоны, ИмяВремФайла);
		УдалитьФайлы(ИмяВремФайла);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СоздатьФайлНаОсновеФайлаНаДиске(Владелец, ПутьКФайлуНаДиске)
	
	
	Попытка
		РаботаСФайлами.СоздатьФайлНаОсновеФайлаНаДиске(Владелец, ПутьКФайлуНаДиске);
	Исключение
		//РаботаСФайламиВнешнийВызов.СоздатьФайлНаОсновеФайлаНаДиске(Владелец, ПутьКФайлуНаДиске);
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ПостроитьДеревоДокумента()
	
	Если Документ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Дерево = РеквизитФормыВЗначение("ОбъектДеревоРеквизитов");
	Дерево.Строки.Очистить();
	
	Корень = Дерево.Строки.Добавить();
	Корень.Наименование = "";
	Корень.Синоним = "Документ";
	Корень.Тип = ТипЗнч(Документ);
	
	МД = Документ.Метаданные();
	ЗаполнитьДеревоРеквизитов(Корень, МД.СтандартныеРеквизиты, "", 1);
	ЗаполнитьДеревоРеквизитов(Корень, МД.Реквизиты, "", 1);
	
	Для каждого ТЧ Из МД.ТабличныеЧасти Цикл
		Если ТЧ.Имя <> "ДополнительныеРеквизиты" Тогда
			Строка = Корень.Строки.Добавить();
			Строка.Наименование = ТЧ.Имя;
			Строка.Синоним = ?(ПустаяСтрока(ТЧ.Синоним), ТЧ.Имя, ТЧ.Синоним);
			Строка.Тип = "Табличная часть";
			ЗаполнитьДеревоРеквизитов(Строка, ТЧ.СтандартныеРеквизиты, "", 2);
			ЗаполнитьДеревоРеквизитов(Строка, ТЧ.Реквизиты, "", 2);
		КонецЕсли;
	КонецЦикла;
	
	Дерево.Строки.Сортировать("Синоним",Истина);
	ЗначениеВРеквизитФормы(Дерево, "ОбъектДеревоРеквизитов");
	
	СписокОбластей.Очистить();
	СписокОбластей.Добавить("{v8 Область.Заголовок}", "Начало заголовка");
	СписокОбластей.Добавить("{/v8 Область.Заголовок}", "Конец заголовка");
	
	Для каждого ТабЧасть Из МД.ТабличныеЧасти Цикл
		Если ТабЧасть.Имя <> "ДополнительныеРеквизиты" Тогда
			СписокОбластей.Добавить("{v8 Область.СтрокаТаблица" + ТабЧасть.Имя + "}", "Начало строки таблицы " + ТабЧасть.Синоним);
			СписокОбластей.Добавить("{/v8 Область.СтрокаТаблица" + ТабЧасть.Имя + "}", "Конец строки таблицы " + ТабЧасть.Синоним);
		КонецЕсли;
	КонецЦикла;
	
	СписокОбластей.Добавить("{v8 Область.Подвал}", "Начало подвала");
	СписокОбластей.Добавить("{/v8 Область.Подвал}", "Конец подвала");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоРеквизитов(Родитель, НаборРеквизитов, Путь, УровеньВложенности)
	
	Если УровеньВложенности > МаксимальныйУровеньВложенности Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Реквизит Из НаборРеквизитов Цикл
		Если Реквизит.Имя = "Ссылка" Тогда
			Продолжить;
		КонецЕсли;
		Строка = Родитель.Строки.Добавить();
		Строка.Наименование = Реквизит.Имя;
		Строка.Синоним = ?(ПустаяСтрока(Реквизит.Синоним), Реквизит.Имя, Реквизит.Синоним);
		Строка.Тип = Реквизит.Тип;
		Строка.ОбъектРодитель = Путь;
		Для Каждого СправочникОбъект Из Метаданные.Справочники Цикл
			Если СправочникОбъект.ПредставлениеОбъекта = Строка(Реквизит.Тип) Тогда
				ПутьСправочника = Путь + "." + Строка.Наименование;
				ЗаполнитьДеревоРеквизитов(Строка, СправочникОбъект.СтандартныеРеквизиты, ПутьСправочника, УровеньВложенности + 1);
				ЗаполнитьДеревоРеквизитов(Строка, СправочникОбъект.Реквизиты, ПутьСправочника, УровеньВложенности + 1);
				Если СправочникОбъект.ТабличныеЧасти.Найти("ДополнительныеРеквизиты") <> Неопределено Тогда
					ЗаполнитьСписокДопРеквизитов(Строка, СправочникОбъект, Путь + "." + Реквизит.Имя);		
				КонецЕсли;
				ВидыКИ = ПолучитьСписокВидовКонтактнойИнформации(СправочникОбъект);
				Если ВидыКИ.Количество() > 0 Тогда
					РодительКИ = Строка.Строки.Добавить();
					РодительКИ.Наименование = "КонтактнаяИнформация";
					РодительКИ.Синоним = "Контактная информация";
					//Строка.Тип = Реквизит.Тип;
					РодительКИ.ОбъектРодитель = ПутьСправочника;	
					Для каждого КИ Из ВидыКИ Цикл
						СтрокаКИ = РодительКИ.Строки.Добавить();
						СтрокаКИ.Наименование = КИ.Значение;
						СтрокаКИ.Синоним = КИ.Представление;
						СтрокаКИ.Тип = "Строка";
						СтрокаКИ.ОбъектРодитель = ПутьСправочника + "." + РодительКИ.Наименование;
					КонецЦикла;
				КонецЕсли;
				Прервать;
			КонецЕсли
		КонецЦикла;		
	КонецЦикла;
	                
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДопРеквизитов(Строка, СправочникОбъект, Путь)
	
	УстановитьПривилегированныйРежим(Истина);
	ВладелецСвойств = Справочники[СправочникОбъект.Имя].СоздатьЭлемент();
	Свойства = УправлениеСвойствами.ПолучитьСписокСвойств(ВладелецСвойств);
	
	Попытка
		
		НоваяСтрокаДопРеквизиты = Строка.Строки.Добавить();
		НоваяСтрокаДопРеквизиты.Наименование = "ДополнительныеСвойства";
		НоваяСтрокаДопРеквизиты.Синоним = "Доп. свойства";			
		НоваяСтрокаДопРеквизиты.Тип = "";
		Для Каждого ДопРеквизит Из Свойства Цикл
			НоваяСтрокаДопРеквизит = НоваяСтрокаДопРеквизиты.Строки.Добавить();
			НоваяСтрокаДопРеквизит.Наименование = ДопРеквизит.Наименование;
			НоваяСтрокаДопРеквизит.Синоним = ДопРеквизит.Заголовок;
			НоваяСтрокаДопРеквизит.Тип = ДопРеквизит.ТипЗначения;
			НоваяСтрокаДопРеквизит.ОбъектРодитель = Путь + "." + НоваяСтрокаДопРеквизиты.Наименование;
		КонецЦикла;
		
	Исключение
		Инфо = ИнформацияОбОшибке();
		ТекстСообщения = НСтр("ru = 'Во время получения дополнительных реквизитов при создании правила автозаполнения файлов возникло исключение:" + Символы.ВК + Инфо.Описание + "'");
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Построение дерева реквизитов'"),
			УровеньЖурналаРегистрации.Информация,
			,
			,
			ТекстСообщения);
	КонецПопытки;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(Параметры.ОбъектыНазначения) = Тип("Массив") Тогда
		Документ = Параметры.ОбъектыНазначения[0];
	КонецЕсли;
	
	Обработка = РеквизитФормыВЗначение("Объект");
	ДокументWord = Обработка.ПолучитьМакет("ДокументWord"); 
	ДокументWriter = Обработка.ПолучитьМакет("ДокументWriter");
	ЗначокWord =  Новый Картинка(Обработка.ПолучитьМакет("ЗначокWord"));
	ЗначокWriter =  Новый Картинка(Обработка.ПолучитьМакет("ЗначокWriter"));
	
	ЗаписатьШаблонПриНеобходимости(ДокументWord, "УПФ Word", "doc");
	ЗаписатьШаблонПриНеобходимости(ДокументWriter, "УПФ Writer", "odt");
	
	ДинамическийСписокМакетов.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", Пользователи.ТекущийПользователь());
	ДинамическийСписокМакетов.Параметры.УстановитьЗначениеПараметра("ИспользоватьИерархию", Истина);
	ДинамическийСписокМакетов.Параметры.УстановитьЗначениеПараметра("Владелец", ПапкаМакетовСсылка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если МаксимальныйУровеньВложенности = 0 Тогда
		МаксимальныйУровеньВложенности = 2;
	КонецЕсли;
	Если ЗначениеЗаполнено(Документ) Тогда
		ПостроитьДеревоДокумента();
	КонецЕсли;
	Если ХранениеМакетов = "" Тогда
		ХранениеМакетов = "Диск";
	КонецЕсли;
	ХранениеМакетовПриИзмененииНаСервере();
	ПапкаМакетовСсылкаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если МаксимальныйУровеньВложенности = 0 Тогда
		МаксимальныйУровеньВложенности = 2;
		Если ЗначениеЗаполнено(Документ) Тогда
			ПостроитьДеревоДокумента();
		КонецЕсли;
	КонецЕсли;	
	
	Если ХранениеМакетов = "" Тогда
		ХранениеМакетов = "Диск";
		ХранениеМакетовПриИзмененииНаСервере();
	КонецЕсли;                                 	
		
	ОбновитьСписокМакетов();
	ПодключитьОбработчикОжидания("ОбновитьСписокМакетов", 60);
		
КонецПроцедуры

&НаКлиенте
Процедура ДокументПриИзменении(Элемент)
	ПостроитьДеревоДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ПапкаМакетовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Каталог = ПапкаМакетов;
	Если Диалог.Выбрать() И Диалог.Каталог <> ПапкаМакетов Тогда
		ПапкаМакетов = Диалог.Каталог;
		ПапкаМакетовПриИзменении(Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкаМакетовПриИзменении(Элемент)
	ОбновитьСписокМакетов();
КонецПроцедуры

&НаКлиенте
Процедура ПапкаМакетовСсылкаПриИзменении(Элемент)
	ПапкаМакетовСсылкаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПапкаМакетовСсылкаПриИзмененииНаСервере()
	ДинамическийСписокМакетов.Параметры.УстановитьЗначениеПараметра("Владелец", ПапкаМакетовСсылка);
КонецПроцедуры

&НаКлиенте
Процедура СписокМакетовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПечатьOffice(Элемент.ТекущиеДанные.Значение);
КонецПроцедуры

&НаКлиенте
Процедура СписокОбластейНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ЗначПеретаск = ПараметрыПеретаскивания.Значение;
	НомерСтроки = ?(ТипЗнч(ЗначПеретаск) = Тип("Массив"), ЗначПеретаск[0], ЗначПеретаск);
	ТекСтр = Элемент.ДанныеСтроки(НомерСтроки);
	ПараметрыПеретаскивания.Значение = ТекСтр.Значение;
	
КонецПроцедуры

&НаКлиенте
Процедура МаксимальныйУровеньВложенностиПриИзменении(Элемент)
	ПостроитьДеревоДокумента();	
КонецПроцедуры

&НаКлиенте
Процедура ХранениеМакетовПриИзменении(Элемент)
	ХранениеМакетовПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ХранениеМакетовПриИзмененииНаСервере()
	
	Элементы.ПапкаМакетов.Видимость = (ХранениеМакетов = "Диск");
	Элементы.ПапкаМакетовСсылка.Видимость = (ХранениеМакетов = "База");
	Элементы.СписокМакетов.Видимость = (ХранениеМакетов = "Диск");
	Элементы.ДинамическийСписокМакетов.Видимость = (ХранениеМакетов = "База");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектДеревоРеквизитовНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ЗначПеретаск = ПараметрыПеретаскивания.Значение;
	НомерСтроки = ?(ТипЗнч(ЗначПеретаск) = Тип("Массив"), ЗначПеретаск[0], ЗначПеретаск);
	ТекСтр = Элемент.ДанныеСтроки(НомерСтроки);
	Путь = Сред(СтрЗаменить(ТекСтр.ОбъектРодитель,".","_"),2) + ?(ПустаяСтрока(ТекСтр.ОбъектРодитель),"","_");
	ПараметрыПеретаскивания.Значение = "{v8 "; 
	Если ЗначениеЗаполнено(ТекСтр.Формат) Тогда
		ПараметрыПеретаскивания.Значение = ПараметрыПеретаскивания.Значение + "Format=<" + ТекСтр.Формат + "> ";
	КонецЕсли;
	ПараметрыПеретаскивания.Значение = ПараметрыПеретаскивания.Значение + Путь + ТекСтр.Наименование + "}";
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектДеревоРеквизитовФорматНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТД = Элемент.Родитель.ТекущиеДанные;
	Если ТД.Тип = "Дата" Тогда
		ОткрытьФорму(
		"ВнешняяОбработка.УниверсальнаяПечатнаяФормаOffice.Форма.ФормаВыбораФорматаДаты",,,,,,
		Новый ОписаниеОповещения("ПослеВыбораФормата", ЭтаФорма, Новый Структура("ТД", ТД)),
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	ИначеЕсли ТД.Тип = "Строка" Тогда
		СписокВыборка = Новый СписокЗначений;
		СписокВыборка.Добавить(1, "Именительный падеж");
		СписокВыборка.Добавить(2, "Родительный падеж");
		СписокВыборка.Добавить(3, "Дательный падеж");
		СписокВыборка.Добавить(4, "Винительный падеж");
		СписокВыборка.Добавить(5, "Творительный падеж");
		СписокВыборка.Добавить(6, "Предложный падеж");
		ПоказатьВыборИзМеню(
		Новый ОписаниеОповещения("ПослеВыбораПадежаИзМеню", ЭтаФорма, Новый Структура("ТД", ТД)),
		СписокВыборка,
		Элементы.ОбъектДеревоРеквизитовФормат);
	ИначеЕсли ТД.Тип = "Число" Тогда
		СписокВыборка = Новый СписокЗначений;
		СписокВыборка.Добавить("КоличествоПрописью","Количество прописью");
		СписокВыборка.Добавить("СуммаПрописью", 	"Сумма прописью");
		СписокВыборка.Добавить("", 					"Свой формат...");
		ПоказатьВыборИзМеню(
		Новый ОписаниеОповещения("ПослеВыбораФорматаЧислаИзМеню", ЭтаФорма, Новый Структура("ТД", ТД)),
		СписокВыборка,
		Элементы.ОбъектДеревоРеквизитовФормат);
	Иначе
		ПоказатьПредупреждение(,"Для данного реквизита невозможна настройка формата");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектДеревоРеквизитовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Возврат;
	Если Поле.Имя = "ОбъектДеревоРеквизитовФормат" Тогда
		ТД = Элемент.ТекущиеДанные;
		Если ТД.Тип = "Дата" Тогда
			ОткрытьФорму(
				"ВнешняяОбработка.УниверсальнаяПечатнаяФормаOffice.Форма.ФормаВыбораФорматаДаты",,,,,,
				Новый ОписаниеОповещения("ПослеВыбораФормата", ЭтаФорма, Новый Структура("ТД", ТД)),
				РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		ИначеЕсли ТД.Тип = "Строка" Тогда
			СписокВыборка = Новый СписокЗначений;
			СписокВыборка.Добавить(1, "Именительный падеж");
			СписокВыборка.Добавить(2, "Родительный падеж");
			СписокВыборка.Добавить(3, "Дательный падеж");
			СписокВыборка.Добавить(4, "Винительный падеж");
			СписокВыборка.Добавить(5, "Творительный падеж");
			СписокВыборка.Добавить(6, "Предложный падеж");
			ПоказатьВыборИзМеню(
				Новый ОписаниеОповещения("ПослеВыбораПадежаИзМеню", ЭтаФорма, Новый Структура("ТД", ТД)),
				СписокВыборка,
				Элементы.ОбъектДеревоРеквизитовФормат);
		ИначеЕсли ТД.Тип = "Число" Тогда
			СписокВыборка = Новый СписокЗначений;
			СписокВыборка.Добавить("КоличествоПрописью","Количество прописью");
			СписокВыборка.Добавить("СуммаПрописью", 	"Сумма прописью");
			СписокВыборка.Добавить("", 					"Свой формат...");
			ПоказатьВыборИзМеню(
				Новый ОписаниеОповещения("ПослеВыбораФорматаЧислаИзМеню", ЭтаФорма, Новый Структура("ТД", ТД)),
				СписокВыборка,
				Элементы.ОбъектДеревоРеквизитовФормат);
		Иначе
			ПоказатьПредупреждение(,"Для данного реквизита невозможна настройка формата");	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФормата(Результат, ДополнительныеПараметры) Экспорт
	
	ТД = ДополнительныеПараметры.ТД;
	ТД.Формат = Результат;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораПадежаИзМеню(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ТД = ДополнительныеПараметры.ТД;	
		ТД.Формат = "Падеж=" + ВыбранныйЭлемент.Значение;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФорматаЧислаИзМеню(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТД = ДополнительныеПараметры.ТД;	
	ТД.Формат = ВыбранныйЭлемент.Значение;
	Если ПустаяСтрока(ТД.Формат) Тогда
		ОткрытьФорму(
				"ВнешняяОбработка.УниверсальнаяПечатнаяФормаOffice.Форма.ФормаВыбораФорматаЧисла",,,,,,
				Новый ОписаниеОповещения("ПослеВыбораФормата", ЭтаФорма, Новый Структура("ТД", ТД)),
				РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);	
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	ОбновитьСписокМакетов();
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	ПечатьOffice(Элементы.СписокМакетов.ТекущиеДанные.Значение);
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	
	ЗапуститьПриложение(Элементы.СписокМакетов.ТекущиеДанные.Значение);
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСозданиеНового;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМакетMSWord(Команда)
	СоздатьМакетНачало("ДокументWord");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМакетOOWriter(Команда)
	СоздатьМакетНачало("ДокументWriter");
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОбласть(Команда)
	
	КоличествоОбластей = КоличествоОбластей + 1;
	СписокОбластей.Добавить("{v8 Область.Область"+КоличествоОбластей+"}", "Начало области № "+КоличествоОбластей);
	СписокОбластей.Добавить("{/v8 Область.Область"+КоличествоОбластей+"}", "Конец области № "+КоличествоОбластей);
	
КонецПроцедуры

#КонецОбласти
